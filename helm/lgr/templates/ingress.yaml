---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-{{ template "lgr.region" .Values }}{{ .Values.env }}
  namespace: {{ .Values.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: '50m'
  labels:
    app: {{ .Values.app }}
    env: {{ .Values.env }}
spec:
  rules:
  - http:
      paths:
      {{- range .Values.microservices }}
        {{- if .web }}
      - path: {{ .web.path }}
        pathType: {{ .web.pathType }}
        backend:
          service:
            name: {{ $.Release.Name }}-{{ .name }}-{{ template "lgr.region" $.Values }}{{ $.Values.env }}
            port:
              number: {{ .web.port }}
        {{- end }}
      {{- end }}
    #host: {{ .Release.Name }}-{{ template "lgr.region" .Values }}{{ .Values.env }}
    host: {{ .Values.lgr.URL }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ingress-controller-{{ template "lgr.region" .Values }}{{ .Values.env }}
  namespace: {{ .Values.namespace }}
spec:
  clusterIP: {{ .Values.clusterIP }}
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: {{ .Values.nodePort }}
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: {{ .Values.app }}
    env: {{ .Values.env }}
    srv: ingress-controller

  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  type: NodePort
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.app }}
    env: {{ .Values.env }}
  name: {{ .Release.Name }}-ingress-controller-{{ template "lgr.region" .Values }}{{ .Values.env }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app }}
      env: {{ .Values.env }}
      srv: ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        env: {{ .Values.env }}
        srv: ingress-controller
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --force-namespace-isolation
        - --default-backend-service=$(POD_NAMESPACE)/{{ .Release.Name }}-gunicorn-{{ template "lgr.region" .Values }}{{ .Values.env }}
        - --watch-namespace=$(POD_NAMESPACE)
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.21.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: {{ .Release.Name }}-ingress-controller-{{ template "lgr.region" .Values }}{{ .Values.env }}
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 10254
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/kubelet/
          name: ingress-kube-config-path
        - mountPath: /etc/kubernetes/tls/
          name: ingress-kube-tls-path
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ingress-nginx
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/lib/kubelet/
          type: ""
        name: ingress-kube-config-path
      - hostPath:
          path: /etc/kubernetes/tls/
          type: ""
        name: ingress-kube-tls-path
